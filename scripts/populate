#!/bin/sh
# Simple populate script: simply populates from a hard-wired list.

HERE="$(dirname "$0")"

TARGET="${1:?}"
BINUTILS_DIR="${2:?}"
COMPILER_PREFIX="${3:?}"

. "$HERE"/functions

SYSROOT="$BINUTILS_DIR/$COMPILER_PREFIX/sys-root"


SKELETON='
    bin dev etc lib proc sbin sys tmp
    usr usr/bin usr/lib usr/sbin
    var var/lock var/log var/run'

LIB_FILES='
    ld
    ld-linux
    libc
    libcrypt
    libgcc_s
    libm
    libpthread
    libresolv
    libnsl
    libnss_compat
    libnss_dns
    libnss_files
    libnss_nis
    librt
    libstdc++
    libutil'

USR_LIB_FILES='
    libncurses'

SO_FILES='.so .so.*'


create_skeleton()
{
    local dir
    for dir in $SKELETON; do
        mkdir -p "$TARGET/$dir"  ||  return
    done
}



    
# Copies list of files into specified target directory
#
#   populate target-dir lib-list [suffixes]
#
populate()
{
    local dir="$1"
    local suffixes="$3"
    local prefix suffix file

    for prefix in $2; do
        if [ -n "$suffixes" ]; then
            local found=0
            for suffix in $suffixes; do
                for file in "$SYSROOT/$dir/$prefix"$suffix; do
                    if [ -e "$file" ]; then
                        install_file -m-w $file "$TARGET"/$dir || return
                        found=1
                    fi
                done
            done
            if ! ((found)); then
                echo -n File "$prefix"
                [ -n "$suffixes" ]  && echo -n "[$suffixes]"
                echo " not found"
                return 1
            fi
        else
            install_file -m-w "$SYSROOT/$dir/$prefix" "$TARGET"/$dir
        fi
    done
}


# Special hack to search /usr/lib for links to /lib.
link_usr_lib()
{
    local file link

    for file in "$SYSROOT/usr/lib"/*; do
        link="$(readlink "$file")"  &&
        grep -q '^\.\./\.\./lib' <<<"$link"  &&
        [ -e "$TARGET/usr/lib/$link" ]  &&
        ln -s "$link" "$TARGET/usr/lib/$(basename "$file")"  ||
        true
    done
}


create_skeleton  &&
populate lib "$LIB_FILES" "-2.7.so $SO_FILES"  &&
populate usr/lib "$USR_LIB_FILES" "$SO_FILES"  &&  link_usr_lib  &&

populate sbin ldconfig 
