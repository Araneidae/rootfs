#!/bin/bash

# Install a file in target root filesystem.  Called as:
#
#   ./install [options] <file> <target-dir> [<permissions>]
#
# with the following environment variable set:
#
: ${sysroot:?}          # Path to rootfs being built
#
# The CROSS_COMPILER envrionment variable should also be set, but it can be
# empty for a native build.
#
# Here <target-dir> is relative to <sysroot> and the given permissions are
# set if specified.
#
# The following options are supported:
#
#   -s      Strip file and mark as executable
#   -x      Mark code as executable, but don't strip
#   -m:     Set mode
#   -o:     Set owner
#   -g:     Set group
#   -f      Destination is file name, not directory: only one file can be
#           copied in this case.


HERE="$(dirname "$0")"

. "$HERE"/functions


DO_STRIP=0
EXECUTABLE=0
MODE=
OWNER=
GROUP=
FILENAME=0

while getopts 'sxm:o:g:f' option; do
    case "$option" in
        s)  DO_STRIP=1
            EXECUTABLE=1 ;;
        x)  EXECUTABLE=1 ;;
        m)  MODE="$OPTARG" ;;
        o)  OWNER="$OPTARG" ;;
        g)  GROUP="$OPTARG" ;;
        f)  FILENAME=1 ;;
        *)  Error Invalid switch ;;
    esac
done
shift $((OPTIND-1))
if (($# < 2)); then
    Error Missing arguments
elif ((FILENAME && $# != 2)); then
    Error Cannot specify multiple files with filename target
fi


# Some bash trickery to get at the list of arguments.  Want to iterate over
# all of the files -- except for the last one!
args=("$@")
target_dir="$sysroot${args[$#-1]}"
unset args[$#-1]

for source in "${args[@]}"; do
    if ((FILENAME)); then
        target="$target_dir"
    else
        target="$target_dir/$(basename "$source")"
    fi

    if [ -d "$source" ]; then
        Error Cannot install directory "$source"
    elif link="$(readlink "$source")"; then
        ln -s "$link" "$target"
    else
        cp "$source" "$target"  &&
        if ((EXECUTABLE)); then
            echo "$target" >> $install_list  &&
            if ((DO_STRIP)); then
                MODE="${MODE:-$(stat -c%a "$source")}"  &&
                do_strip "$target"
            fi
        fi  &&
        if [ -n "$MODE" ]; then
            chmod "$MODE" "$target";
        fi  &&
        if [ -n "$OWNER" -o -n "$GROUP" ]; then
            chown "$OWNER:$GROUP" "$target"
        fi  
    fi || exit
done
