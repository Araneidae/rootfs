# Makefile for building a single package.  Must be called with PACKAGE
# defined.

include $(ROOTFS_TOP)/scripts/makefiles/COMMON
include $(makefiles)/TARGET_COMMON
include $(makefiles)/PACKAGE_COMMON


# Definitions specific to source extraction

# Source directory and package specification.  A little involved, as we want
# the extracted sources to be as uniform as possible, but individual source
# packages introduce their own variations.
TAR_EXTENSION = .tar.bz2
SEPARATOR = -
TAR_SEPARATOR = $(SEPARATOR)
SOURCE_SEPARATOR = $(SEPARATOR)
TAR_FILE = $(PACKAGE)$(TAR_SEPARATOR)$(version)$(TAR_EXTENSION)
SOURCE_DIR_NAME = $(PACKAGE)$(SOURCE_SEPARATOR)$(version)
untar-extra = @:
patch-extra = @:
#
# Perhaps the above can be somewhat simplified?  Check existing packages and
# TOOLKIT_MAKE for ideas.

version = $($(PACKAGE)_VERSION)
MD5_SUM = $(MD5_SUM_$(version))

# Where the sources are placed and where the package will be built.
srcdir = $(SOURCE_ROOT)/$(SOURCE_DIR_NAME)


# Definitions specific to configure.

# Build type needed for --build argument to many ./configure scripts
BUILD_TYPE = $(shell $(TOOLKIT_BIN)/config.guess)


# Finally we can pull in the real package definitions and fire the
# appropriate rules.
include $(packagedir)/CONFIG
include $(makefiles)/PACKAGE_RULES

# vim: set filetype=make:
