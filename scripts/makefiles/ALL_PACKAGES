# Makefile build building all packages.  Basically all we can do is invoke
# PACKAGE_MAKE for every package in the system, in the order that they are
# specified by the selected target.

include $(ROOTFS_TOP)/scripts/makefiles/COMMON
include $(makefiles)/TARGET_COMMON


define make_package
$(MAKE) -f $(makefiles)/PACKAGE_$(1) $(call EXPORT,PACKAGE) $@

endef

# Pass target (and command line overrides) down to each package build.
# This is quite a nice technique for makefile command pass-through.
default $(filter-out default install depends,$(MAKECMDGOALS)):
	$(foreach PACKAGE,$(PACKAGES),$(call make_package,MAKE))

install:
	$(foreach PACKAGE,$(PACKAGES),$(call make_package,INSTALL))

depends:
	$(foreach PACKAGE,$(PACKAGES),$(call make_package,DEPENDS))

.PHONY: $(MAKECMDGOALS)

# vim: set filetype=make:
