# Common definitions when building targets.  Included by all make files
# except for TOOLKIT_MAKE, which is the only target independent build.


# Compute configdir = $(ROOTFS_TOP)/configs/$(TARGET), or take configdir from
# $(TARGET) and update TARGET if TARGET is a path name.
$(call COMPUTE_PATH,TARGET,configdir,configs)


TARGET_ROOT ?= $(ROOTFS_ROOT)/targets/$(TARGET)

# Where packages are built
OBJECT_ROOT = $(TARGET_ROOT)/build
STAGING_ROOT = $(TARGET_ROOT)/staging

# Hosted tools that need to be built for specific targets are installed here.
TARGET_TOOLKIT = $(TARGET_ROOT)/toolkit
PATH := $(TARGET_TOOLKIT)/bin:$(PATH)


# This is the target configuration
include $(configdir)/CONFIG


# If the PACKAGES file doesn't define TOOLCHAIN then it needs to define
# BINUTILS_DIR and COMPILER_PREFIX.
ifdef TOOLCHAIN
    $(call INCLUDE_DEFS,TOOLCHAIN,toolchains)
endif

# If BINUTILS_DIR has been specified assume this needs to be added to the path,
# otherwise assume the compiler is already on our path.
ifdef BINUTILS_DIR
    export PATH := $(BINUTILS_DIR)/bin:$(PATH)
endif

ifdef COMPILER_PREFIX
    export CROSS_COMPILE = $(COMPILER_PREFIX)-
endif

# Here is where library details are stored.
export PKG_CONFIG_PATH = $(TARGET_ROOT)/pkgconfig

# vim: set filetype=make:
