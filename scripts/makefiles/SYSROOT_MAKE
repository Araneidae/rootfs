# This is the make file invoked under fakeroot where we perform all the
# assembly of the final rootfs directory tree.

# All the work in this make file is done using fakeroot: this allows us to
# create device nodes and manage file ownership and permissions.
#
# The output from this build is a file imagefile.cpio containing the complete
# target file system.

include $(TOP)/scripts/makefiles/COMMON
include $(makefiles)/TARGET_COMMON
include $(makefiles)/SYSROOT_COMMON


# By default install DNS and hosts support for name lookup -- these are
# dynamically loaded by the C library, so won't be picked up automatically.
# Also want to install real time and C++ libraries.
EXTRA_LIBS ?= libnss_dns libnss_files librt libstdc++

_populate_EXPORTS = \
    sysroot BINUTILS_DIR COMPILER_PREFIX TERMS install_list EXTRA_LIBS \
    LIB_PREFIX
populate = $(call EXPORT,$(_populate_EXPORTS)) $(scripts)/populate

define install-option
$(MAKE) -f $(makefiles)/OPTION_MAKE OPTION=$(OPTION)

endef



# Dependencies of targets (all phony) to sequence build of $(sysroot): the
# correct sequence is:
#   clean-sysroot       Ensures we start with a clean sheet
#   install-sysroot     Does the main work of building the sysroot
#   final-install       Hook for custom configured 
#   post-install        Populates libraries and completes installation


# Erase any existing sysroot directory and prepare a fresh one
clean-sysroot:
	-chmod -R +w $(sysroot)
	rm -rf $(sysroot)
	mkdir -p $(sysroot)


# Prepare the sysroot directory tree, populate with the template skeleton and
# a number of other configurations, and install the packages.
install-sysroot: clean-sysroot
	$(install-files) '$(TOP)/skeleton/file-list'
	$(useradd) -c 'Root user' -d /root -g 0 -u 0  -s /bin/sh \
            -p $(call SAFE_QUOTE,$(ROOT_PASSWORD)) root

        # Add target specific getty line to inittab
	echo '::respawn:/sbin/getty $(CONSOLE_BAUD) $(CONSOLE_TTY)' \
            >>$(sysroot)/etc/inittab

        # Record the version string.
	echo $(call SAFE_QUOTE,$(ROOTFS_VERSION)) >$(sysroot)/etc/version

        # Install all the selected packages
	rm -f $(install_list);  touch $(install_list)
	$(MAKE) install -f $(makefiles)/ALL_PACKAGES


final-install: install-sysroot
        # Actions defined in TARGET CONFIG


# Final configuration: populate the libraries and sort out first-time.sh.
post-install: final-install
        # Populate the libraries: key final step!
	$(populate)
        # Install the selected options.
	$(foreach OPTION,$(OPTIONS),$(install-option))
        # Wrap up the first-time script.
	$(first-time) -c


$(TARGET_ROOT)/imagefile.cpio: post-install
	cd $(sysroot) && \
        find -name . -o -print | cpio --quiet -H newc -o >$@

.PHONY: clean-sysroot install-sysroot final-install post-install 
.PHONY: $(TARGET_ROOT)/imagefile.cpio

default: $(TARGET_ROOT)/imagefile.cpio
