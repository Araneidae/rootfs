# Some helper shell functions for init.d scripts.


# Functions to simplify starting and stopping daemons.  By default all the
# start/stop script needs to do is:
#
#   . /etc/init.d/functions
#   do_start_stop "$1" PROGRAM ARGS
#
# where PROGRAM is the path to the program to start and ARGS is a list of
# extra arguments passed to start-stop-daemon.
#
# The action can be customised by locally overwriting do_start and do_stop
# after sourcing this file.

evaluate_retval()
{
    [ "$?" = 0 ]  &&  echo ' ok.'  ||  echo ' failed.'
}

do_start()
{
    echo -n "Starting $(basename $program): "
    start-stop-daemon -S -x $program "$@"
    evaluate_retval
}

do_stop()
{
    echo -n "Stopping $(basename $program): "
    start-stop-daemon -K -x $program "$@"
    evaluate_retval
}

# Default implementations.
do_restart()
{
    "$0" stop
    "$0" start
}

start_stop_usage()
{
    echo >&2  "Usage: $0 {start|stop|restart}"
    exit 1
}

do_start_stop()
{
    local action="$1"
    local program="$2"
    shift 2
    
    case "$action" in
        start)      do_start "$@" ;;
        stop)       do_stop "$@" ;;
        restart)    do_restart "$@" ;;
        *)          start_stop_usage "$@" ;;
    esac
}


# Mount all file systems with the specified pass number.  We use the fsck
# pass field for this identification, and we respect the noauto option.

mount_pass()
{
    cat /etc/fstab |
    while read spec file type opts freq passno; do
        if [ "$passno" = "$1" ]  &&
           ! { echo "$opts" | grep -qE '(^|,)noauto(,|$)'; }; then
            mount -t $type -o $opts $spec $file
        fi
    done
}
