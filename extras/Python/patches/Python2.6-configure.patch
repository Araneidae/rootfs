Only in Python-2.6: autom4te.cache
diff -ur Python-2.6.original/configure.in Python-2.6/configure.in
--- Python-2.6.original/configure.in	2008-09-07 20:18:16.000000000 +0100
+++ Python-2.6/configure.in	2008-11-09 09:35:39.000000000 +0000
@@ -2559,7 +2559,7 @@
 # On Tru64, chflags seems to be present, but calling it will
 # exit Python
 AC_MSG_CHECKING(for chflags)
-AC_TRY_RUN([
+AC_TRY_LINK(,[
 #include <sys/stat.h>
 #include <unistd.h>
 int main(int argc, char*argv[])
@@ -2574,7 +2574,7 @@
 )
 
 AC_MSG_CHECKING(for lchflags)
-AC_TRY_RUN([
+AC_TRY_LINK(,[
 #include <sys/stat.h>
 #include <unistd.h>
 int main(int argc, char*argv[])
@@ -3686,7 +3686,8 @@
 }],
 [AC_MSG_RESULT(yes)
  AC_DEFINE(PY_FORMAT_SIZE_T, "z", [Define to printf format modifier for Py_ssize_t])],
- AC_MSG_RESULT(no))
+ AC_MSG_RESULT(no),
+ AC_MSG_RESULT(do not know))
 
 AC_CHECK_TYPE(socklen_t,,
   AC_DEFINE(socklen_t,int,
Only in Python-2.6/Lib: _abcoll.pyc
Only in Python-2.6/Lib: abc.pyc
Only in Python-2.6/Lib: codecs.pyc
Only in Python-2.6/Lib: ConfigParser.pyc
Only in Python-2.6/Lib: copy.pyc
Only in Python-2.6/Lib: copy_reg.pyc
Only in Python-2.6/Lib/distutils: archive_util.pyc
Only in Python-2.6/Lib/distutils: ccompiler.pyc
Only in Python-2.6/Lib/distutils: cmd.pyc
Only in Python-2.6/Lib/distutils/command: build_ext.pyc
Only in Python-2.6/Lib/distutils/command: build.pyc
Only in Python-2.6/Lib/distutils/command: build_scripts.pyc
Only in Python-2.6/Lib/distutils/command: __init__.pyc
Only in Python-2.6/Lib/distutils/command: install_lib.pyc
Only in Python-2.6/Lib/distutils/command: install.pyc
Only in Python-2.6/Lib/distutils: config.pyc
Only in Python-2.6/Lib/distutils: core.pyc
Only in Python-2.6/Lib/distutils: debug.pyc
Only in Python-2.6/Lib/distutils: dep_util.pyc
Only in Python-2.6/Lib/distutils: dir_util.pyc
Only in Python-2.6/Lib/distutils: dist.pyc
Only in Python-2.6/Lib/distutils: errors.pyc
Only in Python-2.6/Lib/distutils: extension.pyc
Only in Python-2.6/Lib/distutils: fancy_getopt.pyc
Only in Python-2.6/Lib/distutils: file_util.pyc
Only in Python-2.6/Lib/distutils: __init__.pyc
Only in Python-2.6/Lib/distutils: log.pyc
Only in Python-2.6/Lib/distutils: spawn.pyc
Only in Python-2.6/Lib/distutils: sysconfig.pyc
Only in Python-2.6/Lib/distutils: text_file.pyc
Only in Python-2.6/Lib/distutils: unixccompiler.pyc
Only in Python-2.6/Lib/distutils: util.pyc
Only in Python-2.6/Lib/encodings: aliases.pyc
Only in Python-2.6/Lib/encodings: __init__.pyc
Only in Python-2.6/Lib/encodings: utf_8.pyc
Only in Python-2.6/Lib: fnmatch.pyc
Only in Python-2.6/Lib: functools.pyc
Only in Python-2.6/Lib: genericpath.pyc
Only in Python-2.6/Lib: getopt.pyc
Only in Python-2.6/Lib: gettext.pyc
Only in Python-2.6/Lib: glob.pyc
Only in Python-2.6/Lib: linecache.pyc
Only in Python-2.6/Lib: locale.pyc
Only in Python-2.6/Lib: optparse.pyc
Only in Python-2.6/Lib: os.pyc
Only in Python-2.6/Lib: platform.pyc
Only in Python-2.6/Lib: posixpath.pyc
Only in Python-2.6/Lib: re.pyc
Only in Python-2.6/Lib: site.pyc
Only in Python-2.6/Lib: sre_compile.pyc
Only in Python-2.6/Lib: sre_constants.pyc
Only in Python-2.6/Lib: sre_parse.pyc
Only in Python-2.6/Lib: stat.pyc
Only in Python-2.6/Lib: string.pyc
Only in Python-2.6/Lib: textwrap.pyc
Only in Python-2.6/Lib: types.pyc
Only in Python-2.6/Lib: UserDict.pyc
Only in Python-2.6/Lib: warnings.pyc
diff -ur Python-2.6.original/Makefile.pre.in Python-2.6/Makefile.pre.in
--- Python-2.6.original/Makefile.pre.in	2008-09-05 23:59:17.000000000 +0100
+++ Python-2.6/Makefile.pre.in	2008-11-09 13:21:19.000000000 +0000
@@ -175,6 +175,7 @@
 
 PYTHON=		python$(EXE)
 BUILDPYTHON=	python$(BUILDEXE)
+HOSTPYTHON=	./$(BUILDPYTHON)
 
 # The task to run while instrument when building the profile-opt target
 PROFILE_TASK=	Tools/pybench/pybench.py -n 2 --with-gc --with-syscheck
@@ -205,6 +206,7 @@
 ##########################################################################
 # Parser
 PGEN=		Parser/pgen$(EXE)
+HOSTPGEN=	$(PGEN)
 
 POBJS=		\
 		Parser/acceler.o \
@@ -370,7 +372,7 @@
 	$(MAKE) all CFLAGS="$(CFLAGS) -fprofile-generate" LIBS="$(LIBS) -lgcov"
 
 run_profile_task:
-	./$(BUILDPYTHON) $(PROFILE_TASK)
+	$(HOSTPYTHON) $(PROFILE_TASK)
 
 build_all_use_profile:
 	$(MAKE) all CFLAGS="$(CFLAGS) -fprofile-use"
@@ -388,14 +390,14 @@
 			$(BLDLIBRARY) $(LIBS) $(MODLIBS) $(SYSLIBS) $(LDLAST)
 
 platform: $(BUILDPYTHON)
-	$(RUNSHARED) ./$(BUILDPYTHON) -E -c 'import sys ; from distutils.util import get_platform ; print get_platform()+"-"+sys.version[0:3]' >platform
+	$(RUNSHARED) $(HOSTPYTHON) -E -c 'import sys ; from distutils.util import get_platform ; print get_platform()+"-"+sys.version[0:3]' >platform
 
 
 # Build the shared modules
 sharedmods: $(BUILDPYTHON)
 	@case $$MAKEFLAGS in \
-	*s*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' ./$(BUILDPYTHON) -E $(srcdir)/setup.py -q build;; \
-	*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' ./$(BUILDPYTHON) -E $(srcdir)/setup.py build;; \
+	*s*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' $(HOSTPYTHON) -E $(srcdir)/setup.py -q build;; \
+	*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' $(HOSTPYTHON) -E $(srcdir)/setup.py build;; \
 	esac
 
 # Build static library
@@ -513,7 +515,7 @@
 
 $(GRAMMAR_H) $(GRAMMAR_C): $(PGEN) $(GRAMMAR_INPUT)
 		-@$(INSTALL) -d Include
-		-$(PGEN) $(GRAMMAR_INPUT) $(GRAMMAR_H) $(GRAMMAR_C)
+		-$(HOSTPGEN) $(GRAMMAR_INPUT) $(GRAMMAR_H) $(GRAMMAR_C)
 
 $(PGEN):	$(PGENOBJS)
 		$(CC) $(OPT) $(LDFLAGS) $(PGENOBJS) $(LIBS) -o $(PGEN)
@@ -879,23 +881,23 @@
 	done
 	$(INSTALL_DATA) $(srcdir)/LICENSE $(DESTDIR)$(LIBDEST)/LICENSE.txt
 	PYTHONPATH=$(DESTDIR)$(LIBDEST)  $(RUNSHARED) \
-		./$(BUILDPYTHON) -Wi -tt $(DESTDIR)$(LIBDEST)/compileall.py \
+		$(HOSTPYTHON) -Wi -tt $(DESTDIR)$(LIBDEST)/compileall.py \
 		-d $(LIBDEST) -f \
 		-x 'bad_coding|badsyntax|site-packages' $(DESTDIR)$(LIBDEST)
 	PYTHONPATH=$(DESTDIR)$(LIBDEST) $(RUNSHARED) \
-		./$(BUILDPYTHON) -Wi -tt -O $(DESTDIR)$(LIBDEST)/compileall.py \
+		$(HOSTPYTHON) -Wi -tt -O $(DESTDIR)$(LIBDEST)/compileall.py \
 		-d $(LIBDEST) -f \
 		-x 'bad_coding|badsyntax|site-packages' $(DESTDIR)$(LIBDEST)
 	-PYTHONPATH=$(DESTDIR)$(LIBDEST)  $(RUNSHARED) \
-		./$(BUILDPYTHON) -Wi -t $(DESTDIR)$(LIBDEST)/compileall.py \
+		$(HOSTPYTHON) -Wi -t $(DESTDIR)$(LIBDEST)/compileall.py \
 		-d $(LIBDEST)/site-packages -f \
 		-x badsyntax $(DESTDIR)$(LIBDEST)/site-packages
 	-PYTHONPATH=$(DESTDIR)$(LIBDEST) $(RUNSHARED) \
-		./$(BUILDPYTHON) -Wi -t -O $(DESTDIR)$(LIBDEST)/compileall.py \
+		$(HOSTPYTHON) -Wi -t -O $(DESTDIR)$(LIBDEST)/compileall.py \
 		-d $(LIBDEST)/site-packages -f \
 		-x badsyntax $(DESTDIR)$(LIBDEST)/site-packages
 	-PYTHONPATH=$(DESTDIR)$(LIBDEST) $(RUNSHARED) \
-		./$(BUILDPYTHON) -Wi -t -c "import lib2to3.pygram, lib2to3.patcomp;lib2to3.patcomp.PatternCompiler()"
+		$(HOSTPYTHON) -Wi -t -c "import lib2to3.pygram, lib2to3.patcomp;lib2to3.patcomp.PatternCompiler()"
 
 # Create the PLATDIR source directory, if one wasn't distributed..
 $(srcdir)/Lib/$(PLATDIR):
@@ -993,7 +995,8 @@
 # Install the dynamically loadable modules
 # This goes into $(exec_prefix)
 sharedinstall:
-	$(RUNSHARED) ./$(BUILDPYTHON) -E $(srcdir)/setup.py install \
+	CROSS_COMPILE='$(CROSS_COMPILE)' \
+	$(RUNSHARED) $(HOSTPYTHON) -E $(srcdir)/setup.py install \
 	   	--prefix=$(prefix) \
 		--install-scripts=$(BINDIR) \
 		--install-platlib=$(DESTSHARED) \
@@ -1031,7 +1034,7 @@
 		fi; \
 	done
 	$(LN) -fsn include/python$(VERSION) $(DESTDIR)$(prefix)/Headers
-	sed 's/%VERSION%/'"`$(RUNSHARED) ./$(BUILDPYTHON) -c 'import platform; print platform.python_version()'`"'/g' < $(RESSRCDIR)/Info.plist > $(DESTDIR)$(prefix)/Resources/Info.plist
+	sed 's/%VERSION%/'"`$(RUNSHARED) $(HOSTPYTHON) -c 'import platform; print platform.python_version()'`"'/g' < $(RESSRCDIR)/Info.plist > $(DESTDIR)$(prefix)/Resources/Info.plist
 	$(LN) -fsn $(VERSION) $(DESTDIR)$(PYTHONFRAMEWORKINSTALLDIR)/Versions/Current
 	$(LN) -fsn Versions/Current/$(PYTHONFRAMEWORK) $(DESTDIR)$(PYTHONFRAMEWORKINSTALLDIR)/$(PYTHONFRAMEWORK)
 	$(LN) -fsn Versions/Current/Headers $(DESTDIR)$(PYTHONFRAMEWORKINSTALLDIR)/Headers
@@ -1073,7 +1076,7 @@
 # This installs a few of the useful scripts in Tools/scripts
 scriptsinstall:
 	SRCDIR=$(srcdir) $(RUNSHARED) \
-	./$(BUILDPYTHON) $(srcdir)/Tools/scripts/setup.py install \
+	$(HOSTPYTHON) $(srcdir)/Tools/scripts/setup.py install \
 	--prefix=$(prefix) \
 	--install-scripts=$(BINDIR) \
 	--root=/$(DESTDIR)
@@ -1095,7 +1098,7 @@
 
 # Run reindent on the library
 reindent:
-	./$(BUILDPYTHON) $(srcdir)/Tools/scripts/reindent.py -r $(srcdir)/Lib
+	$(HOSTPYTHON) $(srcdir)/Tools/scripts/reindent.py -r $(srcdir)/Lib
 
 # Rerun configure with the same options as it was run last time,
 # provided the config.status script exists
@@ -1191,7 +1194,7 @@
 
 # Perform some verification checks on any modified files.
 patchcheck:
-	$(RUNSHARED) ./$(BUILDPYTHON) $(srcdir)/Tools/scripts/patchcheck.py
+	$(RUNSHARED) $(HOSTPYTHON) $(srcdir)/Tools/scripts/patchcheck.py
 
 # Dependencies
 
diff -ur Python-2.6.original/setup.py Python-2.6/setup.py
--- Python-2.6.original/setup.py	2008-09-30 01:15:45.000000000 +0100
+++ Python-2.6/setup.py	2008-11-09 12:58:14.000000000 +0000
@@ -19,6 +19,9 @@
 # This global variable is used to hold the list of modules to be disabled.
 disabled_module_list = []
 
+# Records if cross compiling -- ignore import errors in this case
+cross_compiling = os.environ.get('CROSS_COMPILE') == 'yes'
+
 def add_dir_to_list(dirlist, dir):
     """Add the directory 'dir' to the list 'dirlist' (at the front) if
     1) 'dir' is not already in 'dirlist'
@@ -273,27 +276,31 @@
         try:
             imp.load_dynamic(ext.name, ext_filename)
         except ImportError, why:
-            self.failed.append(ext.name)
-            self.announce('*** WARNING: renaming "%s" since importing it'
-                          ' failed: %s' % (ext.name, why), level=3)
-            assert not self.inplace
-            basename, tail = os.path.splitext(ext_filename)
-            newname = basename + "_failed" + tail
-            if os.path.exists(newname):
-                os.remove(newname)
-            os.rename(ext_filename, newname)
-
-            # XXX -- This relies on a Vile HACK in
-            # distutils.command.build_ext.build_extension().  The
-            # _built_objects attribute is stored there strictly for
-            # use here.
-            # If there is a failure, _built_objects may not be there,
-            # so catch the AttributeError and move on.
-            try:
-                for filename in self._built_objects:
-                    os.remove(filename)
-            except AttributeError:
-                self.announce('unable to remove files (ignored)')
+            if cross_compiling:
+                self.announce(
+                    'Cross compiling, so cannot import "%s"' % ext.name)
+            else:
+                self.failed.append(ext.name)
+                self.announce('*** WARNING: renaming "%s" since importing it'
+                              ' failed: %s' % (ext.name, why), level=3)
+                assert not self.inplace
+                basename, tail = os.path.splitext(ext_filename)
+                newname = basename + "_failed" + tail
+                if os.path.exists(newname):
+                    os.remove(newname)
+                os.rename(ext_filename, newname)
+
+                # XXX -- This relies on a Vile HACK in
+                # distutils.command.build_ext.build_extension().  The
+                # _built_objects attribute is stored there strictly for
+                # use here.
+                # If there is a failure, _built_objects may not be there,
+                # so catch the AttributeError and move on.
+                try:
+                    for filename in self._built_objects:
+                        os.remove(filename)
+                except AttributeError:
+                    self.announce('unable to remove files (ignored)')
         except:
             exc_type, why, tb = sys.exc_info()
             self.announce('*** WARNING: importing extension "%s" '
